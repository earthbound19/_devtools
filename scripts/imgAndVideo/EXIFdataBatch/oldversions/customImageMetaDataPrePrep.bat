@ECHO OFF

REM This script is in development, and was built for a file setup that no longer is. For that intent it may need to be renovated.

REM See README.md for instructions on usage of this batch script (it is best used as called from another batch).

REM customImageMetaDataPrePrep.bat will create empty text files in a subfolder __metadataAdditions for all image etc. files you drop onto it. It will create said subdirectory in the same folder as the image, and a file named <your filename>__metadataAdditions.txt, which this batch will fill with data from e.g. metaDataDescriptionIntroSource.txt etc. It will also write into ~__metadataAdditions.txt some fake International Art English gibberish, generated by another script which this batch calls.

REM Run this batch, and then open the ~__metadataAdditions.txt file. Add to or edit that text with your custom data, as appropriate. If you know other IPTC standard tags which you'd like to add, insert them, after the same style as what you see this batch does in that text file.

REM With the metadata to add now ready, run customImageMetadataPopulate.bat to enter all the custom metadata from ~__metadataAdditions.txt into the associated image file, suitable for e.g. web publishing. CAUTION: SEE THE NOTES IN ~Populate.bat BEFORE YOU RUN IT!

REM Note that this batch relies on the existence of Copyright.txt and the other mentioned source text files, from which it populates the metadata addition template text files. ALSO NOTE that if you alter those files, you must preserve exactly the newline (line break) structures they already have! Otherwise, the text will not come together such that this batch can successfully embed it in any image file.
	REM 09/03/2015 10:55:09 PM -RAH


IF NOT EXIST __metadataAdditions MKDIR __metadataAdditions

PUSHD

SETLOCAL ENABLEDELAYEDEXPANSION

FOR %%Y IN (%*) DO (
set driveletter=%%~dY
set filepath=%%~pY
set filename=%%~nxY
set filenameNoExt=%%~nY

		REM Create and populate a text file with additional metadata template text for every image passed to this script, but *only* if such a text file does not already exist.
	IF NOT EXIST !filepath!\__metadataAdditions\!filename!__metadataAdditions.txt (
		REM The following relies on a python gibberish artist statement generator to create a "description" of the work:
	CMD /C "C: && CD C:\devtools\_devbin\GibbGen\pyMarkovGibGen && Python _runMarkovGen.py"

		REM Create and prepare the Description IPTC tag data first, because we need to replace any/all newlines in it with spaces, else exifinfo will throw errors and/or not properly embed the tag:
	TYPE metaDataDescriptionIntroSource.txt > !filepath!\__metadataAdditions\!filename!__metadataAdditions.txt
	TYPE C:\devtools\_devbin\GibbGen\pyMarkovGibGen\_generated_gibberish.txt >> !filepath!\__metadataAdditions\!filename!__metadataAdditions.txt
	TYPE metaDataDescriptionEndSource.txt >> !filepath!\__metadataAdditions\!filename!__metadataAdditions.txt
		REM unix tr from Gnu CoreUtils win32; thanks to: http://stackoverflow.com/a/1252010/1397555
		REM Replace all newlines in ~__metadataAdditions.txt with spaces:
	tr \n " " < !filepath!\__metadataAdditions\!filename!__metadataAdditions.txt > temp.txt
	DEL !filepath!\__metadataAdditions\!filename!__metadataAdditions.txt
	COPY temp.txt !filepath!\__metadataAdditions\!filename!__metadataAdditions.txt
	DEL temp.txt

		REM Else there be a dangling line that doesn't terminate, and the next tag resultantly becomes part of the text of that most previous tag:
	TYPE newline.txt >> !filepath!\__metadataAdditions\!filename!__metadataAdditions.txt

	ECHO -Title="!filenameNoExt!" >> !driveletter!\!filepath!\__metadataAdditions\!filename!__metadataAdditions.txt

	TYPE metaDataCopyrightSource.txt >> !filepath!\__metadataAdditions\!filename!__metadataAdditions.txt

	!driveletter!\!filepath!\__metadataAdditions\!filename!__metadataAdditions.txt
	)

)

POPD

ENDLOCAL